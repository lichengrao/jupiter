{"version":3,"sources":["utils.js","components/CustomSearch.js","components/Favorites.js","components/Home.js","components/Login.js","components/Register.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_ORIGIN","loginUrl","login","credential","a","fetch","method","headers","credentials","body","JSON","stringify","response","status","Error","json","checkValidSession","registerUrl","register","data","logoutUrl","logout","topGamesUrl","getTopGames","getGameDetailsUrl","getGameDetails","gameName","searchGameByIdUrl","searchGameById","gameId","searchGameByName","id","favoriteItemUrl","addFavoriteItem","favItem","favorite","deleteFavoriteItem","getFavoriteItem","getRecommendedItemsUrl","getRecommendations","CustomSearch","onSuccess","useState","displayModal","setDisplayModal","onSubmit","game_name","message","error","shape","onClick","icon","SearchOutlined","style","marginLeft","marginTop","title","visible","onCancel","footer","name","onFinish","Item","rules","required","placeholder","type","htmlType","SubMenu","Menu","MenuKey","renderItem","item","favoriteOnChange","unFavOnClick","display","justifyContent","alignItems","href","url","target","rel","width","overflow","textOverflow","broadcaster_name","DeleteFilled","marginRight","Favorites","displayDrawer","setDisplayDrawer","VIDEO","STREAM","CLIP","StarFilled","placement","onClose","mode","defaultOpenKeys","stype","height","borderRight","selectable","EyeOutlined","map","YoutubeOutlined","VideoCameraOutlined","TabPane","Tabs","tabKeys","renderCardTitle","loggedIn","favs","favOnChange","isFav","find","fav","favOnClick","StarOutlined","renderCardGrid","grid","xs","sm","md","lg","xl","dataSource","alt","src","thumbnail_url","replace","Home","resources","favoriteItems","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Login","success","user_id","destroyOnClose","preserve","prefix","UserOutlined","LockOutlined","Register","initialValues","remember","Header","Layout","Content","Sider","App","setLoggedIn","topGames","setTopGames","setResources","setFavoriteItems","onGameSelect","key","signinOnSuccess","signoutOnClick","onValidSession","loginResponse","favoriteResponse","useEffect","fetchTopGames","err","overflowY","justify","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","className","onSelect","defaultSelectedKeys","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","padding","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be2b2f0d.chunk.js","sourcesContent":["// If you don't want to host your server code and client code together, you can pay AWS to host your server with HTTPS then config the api url endpoints like below\n// const SERVER_ORIGIN = '<Your server's url>';\n\nconst SERVER_ORIGIN = '';\n\nconst loginUrl = `${SERVER_ORIGIN}/login`;\n\nexport const login = async (credential) => {\n  const response = await fetch(loginUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8',\n    },\n    credentials: 'include',\n    body: JSON.stringify(credential),\n  });\n\n  if (response.status !== 200) {\n    throw Error('Failed to log in');\n  }\n\n  return response.json();\n};\n\nexport const checkValidSession = async () => {\n  const response = await fetch(loginUrl, {\n    credentials: 'include',\n  });\n\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return false;\n  }\n};\n\nconst registerUrl = `${SERVER_ORIGIN}/register`;\n\nexport const register = async (data) => {\n  const response = await fetch(registerUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (response.status !== 200) {\n    throw Error('Failed to register');\n  }\n};\n\nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\n\nexport const logout = async () => {\n  const response = await fetch(logoutUrl, {\n    method: 'POST',\n    credentials: 'include',\n  });\n\n  if (response.status !== 200) {\n    throw Error('Failed to log out');\n  }\n};\n\nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\n\nexport const getTopGames = async () => {\n  const response = await fetch(topGamesUrl);\n\n  if (response.status !== 200) {\n    throw Error('Failed to get top games');\n  }\n\n  return response.json();\n};\n\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\n\nconst getGameDetails = async (gameName) => {\n  const response = await fetch(`${getGameDetailsUrl}${gameName}`);\n\n  if (response.status !== 200) {\n    throw Error('Failed to find the game');\n  }\n\n  return response.json();\n};\n\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\n\nexport const searchGameById = async (gameId) => {\n  const response = await fetch(`${searchGameByIdUrl}${gameId}`);\n\n  if (response.status !== 200) {\n    throw Error('Failed to find the game');\n  }\n\n  return response.json();\n};\n\nexport const searchGameByName = async (gameName) => {\n  const data = await getGameDetails(gameName);\n\n  if (data && data.id) {\n    return searchGameById(data.id);\n  }\n\n  throw Error('Failed to find the game');\n};\n\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\n\nexport const addFavoriteItem = async (favItem) => {\n  const response = await fetch(favoriteItemUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8',\n    },\n    credentials: 'include',\n    body: JSON.stringify({ favorite: favItem }),\n  });\n\n  if (response.status !== 200) {\n    throw Error('Failed to add favorite item');\n  }\n};\n\nexport const deleteFavoriteItem = async (favItem) => {\n  const response = await fetch(favoriteItemUrl, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8',\n    },\n    credentials: 'include',\n    body: JSON.stringify({ favorite: favItem }),\n  });\n\n  if (response.status !== 200) {\n    throw Error('Failed to delete favorite item');\n  }\n};\n\nexport const getFavoriteItem = async () => {\n  const response = await fetch(favoriteItemUrl, {\n    credentials: 'include',\n  });\n\n  if (response.status !== 200) {\n    throw Error('Failed to get favorite item');\n  }\n\n  return response.json();\n};\n\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\n\nexport const getRecommendations = async () => {\n  const response = await fetch(getRecommendedItemsUrl, {\n    credentials: 'include',\n  });\n\n  if (response.status !== 200) {\n    throw Error('Fail to get recommended item');\n  }\n\n  return response.json();\n};\n","import React, { useState } from 'react';\r\nimport { Button, Form, Input, message, Modal } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { searchGameByName } from '../utils';\r\n\r\nconst CustomSearch = ({ onSuccess }) => {\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setDisplayModal(false);\r\n  };\r\n\r\n  const searchOnClick = () => {\r\n    setDisplayModal(true);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const response = await searchGameByName(data.game_name);\r\n      setDisplayModal(false);\r\n      onSuccess(response);\r\n    } catch (err) {\r\n      message.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        shape=\"round\"\r\n        onClick={searchOnClick}\r\n        icon={<SearchOutlined />}\r\n        style={{ marginLeft: '20px', marginTop: '20px' }}\r\n      >\r\n        Custom Search\r\n      </Button>\r\n      <Modal\r\n        title=\"Custom Search\"\r\n        visible={displayModal}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        <Form name=\"custom_search\" onFinish={onSubmit}>\r\n          <Form.Item\r\n            name=\"game_name\"\r\n            rules={[{ required: true, message: 'Please enter a game name' }]}\r\n          >\r\n            <Input placeholder=\"Game name\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Search\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomSearch;\r\n","import React, { useState } from 'react';\r\nimport { Menu, Button, Drawer, Tooltip, message } from 'antd';\r\nimport {\r\n  EyeOutlined,\r\n  YoutubeOutlined,\r\n  VideoCameraOutlined,\r\n  StarFilled,\r\n  DeleteFilled,\r\n} from '@ant-design/icons';\r\nimport { deleteFavoriteItem } from '../utils';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MenuKey = {\r\n  Streams: 'streams',\r\n  Videos: 'videos',\r\n  Clips: 'clips',\r\n};\r\n\r\nconst renderItem = (item, favoriteOnChange) => {\r\n  const unFavOnClick = async () => {\r\n    try {\r\n      await deleteFavoriteItem(item);\r\n      await favoriteOnChange();\r\n    } catch (err) {\r\n      message.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu.Item key={item.id}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <a\r\n            href={item.url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{\r\n              width: '500px',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n            }}\r\n          >\r\n            {`${item.broadcaster_name} - ${item.title}`}\r\n          </a>\r\n          <Tooltip title=\"Remove from favorite list\">\r\n            <Button\r\n              shape=\"round\"\r\n              icon={<DeleteFilled style={{ marginRight: '0px' }} />}\r\n              onClick={unFavOnClick}\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n      </Menu.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Favorites = ({ data, favoriteOnChange }) => {\r\n  const [displayDrawer, setDisplayDrawer] = useState(false);\r\n\r\n  const { VIDEO, STREAM, CLIP } = data;\r\n\r\n  const onDrawerClose = () => {\r\n    setDisplayDrawer(false);\r\n  };\r\n\r\n  const onFavoriteClick = () => {\r\n    setDisplayDrawer(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"round\"\r\n        onClick={onFavoriteClick}\r\n        icon={<StarFilled />}\r\n      >\r\n        My Favorites\r\n      </Button>\r\n\r\n      <Drawer\r\n        title=\"My Favorites\"\r\n        placement=\"right\"\r\n        width={720}\r\n        visible={displayDrawer}\r\n        onClose={onDrawerClose}\r\n      >\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultOpenKeys={[MenuKey.Streams]}\r\n          stype={{ height: '100%', borderRight: 0 }}\r\n          selectable={false}\r\n        >\r\n          <SubMenu key={MenuKey.Streams} icon={<EyeOutlined />} title=\"Streams\">\r\n            {STREAM.map((item) => renderItem(item, favoriteOnChange))}\r\n          </SubMenu>\r\n\r\n          <SubMenu\r\n            key={MenuKey.Videos}\r\n            icon={<YoutubeOutlined />}\r\n            title=\"Videos\"\r\n          >\r\n            {VIDEO.map((item) => renderItem(item, favoriteOnChange))}\r\n          </SubMenu>\r\n\r\n          <SubMenu\r\n            key={MenuKey.Clips}\r\n            icon={<VideoCameraOutlined />}\r\n            title=\"Clips\"\r\n          >\r\n            {CLIP.map((item) => renderItem(item, favoriteOnChange))}\r\n          </SubMenu>\r\n        </Menu>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from 'react';\r\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\r\nimport { StarFilled, StarOutlined } from '@ant-design/icons';\r\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\r\n\r\nconst { TabPane } = Tabs;\r\nconst tabKeys = {\r\n  Streams: 'stream',\r\n  Videos: 'videos',\r\n  Clips: 'clips',\r\n};\r\n\r\nconst processUrl = (url) =>\r\n  url\r\n    .replace('%{height}', '252')\r\n    .replace('%{width}', '480')\r\n    .replace('{height}', '252')\r\n    .replace('{width}', '480');\r\n\r\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\r\n  const title = `${item.broadcaster_name} - ${item.title}`;\r\n\r\n  const isFav = favs.find((fav) => fav.id === item.id);\r\n\r\n  const favOnClick = async () => {\r\n    if (isFav) {\r\n      try {\r\n        await deleteFavoriteItem(item);\r\n        await favOnChange();\r\n      } catch (err) {\r\n        message.error(err.message);\r\n      }\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await addFavoriteItem(item);\r\n      await favOnChange();\r\n    } catch (err) {\r\n      message.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loggedIn && (\r\n        <Tooltip\r\n          title={isFav ? 'Remove from favorite list' : 'Add to favorite list'}\r\n        >\r\n          <Button\r\n            shape=\"circle\"\r\n            icon={isFav ? <StarFilled /> : <StarOutlined />}\r\n            onClick={favOnClick}\r\n          />\r\n        </Tooltip>\r\n      )}\r\n      <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', width: 450 }}>\r\n        <Tooltip title={title}>\r\n          <span>{title}</span>\r\n        </Tooltip>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\r\n  return (\r\n    <List\r\n      grid={{ xs: 1, sm: 2, md: 4, lg: 4, xl: 6 }}\r\n      dataSource={data}\r\n      renderItem={(item) => (\r\n        <List.Item style={{ marginRight: '20px' }}>\r\n          <Card title={renderCardTitle(item, loggedIn, favs, favOnChange)}>\r\n            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img\r\n                alt=\"Placeholder\"\r\n                src={processUrl(item.thumbnail_url)}\r\n                style={{ width: '100%' }}\r\n              />\r\n            </a>\r\n          </Card>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\r\n  const { VIDEO, STREAM, CLIP } = resources;\r\n  const {\r\n    VIDEO: favVideos,\r\n    STREAM: favStreams,\r\n    CLIP: favClips,\r\n  } = favoriteItems;\r\n\r\n  return (\r\n    <Tabs defaultActiveKey={tabKeys.Streams}>\r\n      <TabPane\r\n        tab=\"Streams\"\r\n        key={tabKeys.Streams}\r\n        style={{ overflow: 'auto' }}\r\n        forceRender={true}\r\n      >\r\n        {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\r\n      </TabPane>\r\n      <TabPane\r\n        tab=\"Videos\"\r\n        key={tabKeys.Videos}\r\n        style={{ height: '1000px', overflow: 'auto' }}\r\n        forceRender={true}\r\n      >\r\n        {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\r\n      </TabPane>\r\n      <TabPane\r\n        tab=\"Clips\"\r\n        key={tabKeys.Clips}\r\n        style={{ height: '1000px', overflow: 'auto' }}\r\n        forceRender={true}\r\n      >\r\n        {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Button, Form, Input, message, Modal } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { login } from '../utils';\r\n\r\nconst Login = ({ onSuccess }) => {\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setDisplayModal(false);\r\n  };\r\n\r\n  const signinOnClick = () => {\r\n    setDisplayModal(true);\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    try {\r\n      await login(data);\r\n      setDisplayModal(false);\r\n      message.success(`Welcome back, ${data.user_id}`);\r\n      onSuccess();\r\n    } catch (err) {\r\n      message.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        shape=\"round\"\r\n        onClick={signinOnClick}\r\n        style={{ marginRight: '20px' }}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Modal\r\n        title=\"Log In\"\r\n        visible={displayModal}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        destroyOnClose={true}\r\n      >\r\n        <Form name=\"normal_login\" onFinish={onFinish} preserve={false}>\r\n          <Form.Item\r\n            name=\"user_id\"\r\n            rules={[{ required: true, message: 'Please input your Username!' }]}\r\n          >\r\n            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: 'Please input your Password!' }]}\r\n          >\r\n            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Login\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button, Form, Input, message, Modal } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { register } from '../utils';\r\n\r\nconst Register = () => {\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n\r\n  const handleCancel = () => {\r\n    setDisplayModal(false);\r\n  };\r\n\r\n  const signupOnClick = () => {\r\n    setDisplayModal(true);\r\n  };\r\n\r\n  const onFinish = async (data) => {\r\n    try {\r\n      await register(data);\r\n      setDisplayModal(false);\r\n      message.success(`Successfully signed up`);\r\n    } catch (err) {\r\n      message.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button shape=\"round\" type=\"primary\" onClick={signupOnClick}>\r\n        Register\r\n      </Button>\r\n      <Modal\r\n        title=\"Register\"\r\n        visible={displayModal}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        destroyOnClose={true}\r\n      >\r\n        <Form\r\n          name=\"normal_register\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          preserve={false}\r\n        >\r\n          <Form.Item\r\n            name=\"user_id\"\r\n            rules={[{ required: true, message: 'Please input your Username!' }]}\r\n          >\r\n            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: 'Please input your Password!' }]}\r\n          >\r\n            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"first_name\"\r\n            rules={[\r\n              { required: true, message: 'Please input your Firstname!' },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"firstname\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"last_name\"\r\n            rules={[{ required: true, message: 'Please input your Lastname!' }]}\r\n          >\r\n            <Input placeholder=\"lastname\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Layout, Menu, message, Row } from 'antd';\nimport { CustomSearch, Favorites, Home, Login, Register } from './components';\nimport {\n  checkValidSession,\n  getFavoriteItem,\n  getRecommendations,\n  getTopGames,\n  logout,\n  searchGameById,\n} from './utils';\nimport { LikeOutlined, FireOutlined } from '@ant-design/icons';\nimport SubMenu from 'antd/lib/menu/SubMenu';\n\nconst { Header, Content, Sider } = Layout;\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [topGames, setTopGames] = useState([]);\n  const [resources, setResources] = useState({\n    VIDEO: [],\n    STREAM: [],\n    CLIP: [],\n  });\n  const [favoriteItems, setFavoriteItems] = useState({\n    VIDEO: [],\n    STREAM: [],\n    CLIP: [],\n  });\n\n  const favoriteOnChange = async () => {\n    try {\n      const response = await getFavoriteItem();\n      setFavoriteItems(response);\n    } catch (err) {\n      message.error(err.message);\n    }\n  };\n\n  const onGameSelect = async ({ key }) => {\n    if (key === 'Recommendation') {\n      const response = await getRecommendations();\n      setResources(response);\n      return;\n    }\n\n    const response = await searchGameById(key);\n    setResources(response);\n  };\n\n  const customSearchOnSuccess = (data) => {\n    setResources(data);\n  };\n\n  const signinOnSuccess = async () => {\n    try {\n      const response = await getFavoriteItem();\n      setLoggedIn(true);\n      setFavoriteItems(response);\n    } catch (err) {\n      message.error(err.message);\n    }\n  };\n\n  const signoutOnClick = async () => {\n    try {\n      await logout();\n      setLoggedIn(false);\n      message.success(`Successfully signed out`);\n    } catch (err) {\n      message.error(err.message);\n    }\n  };\n\n  const onValidSession = async () => {\n    try {\n      const loginResponse = await checkValidSession();\n      if (loginResponse) {\n        const favoriteResponse = await getFavoriteItem();\n        setFavoriteItems(favoriteResponse);\n        setLoggedIn(true);\n        message.success(`Welcome back ${loginResponse.user_id}`);\n      } else {\n        setLoggedIn(false);\n      }\n    } catch (err) {\n      message.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    const fetchTopGames = async () => {\n      try {\n        const response = await getTopGames();\n        setTopGames(response);\n      } catch (err) {\n        message.err(err.message);\n      }\n    };\n\n    onValidSession();\n    fetchTopGames();\n  }, []);\n\n  useEffect(() => {\n    onGameSelect({ key: 'Recommendation' });\n  }, [loggedIn]);\n\n  return (\n    <Layout style={{ height: '100vh', overflowY: 'hidden' }}>\n      <Header>\n        <Row justify=\"space-between\">\n          <Col>\n            {loggedIn && (\n              <Favorites\n                data={favoriteItems}\n                favoriteOnChange={favoriteOnChange}\n              />\n            )}\n          </Col>\n          <Col>\n            {loggedIn ? (\n              <Button shape=\"round\" onClick={signoutOnClick}>\n                Logout\n              </Button>\n            ) : (\n              <>\n                <Login onSuccess={signinOnSuccess} />\n                <Register />\n              </>\n            )}\n          </Col>\n        </Row>\n      </Header>\n      <Layout>\n        <Sider\n          width={300}\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={(broken) => {\n            console.log(broken);\n          }}\n          onCollapse={(collapsed, type) => {\n            console.log(collapsed, type);\n          }}\n          className=\"site-layout-background\"\n        >\n          <CustomSearch onSuccess={customSearchOnSuccess} />\n          <Menu\n            mode=\"inline\"\n            onSelect={onGameSelect}\n            style={{ marginTop: '10px' }}\n            defaultSelectedKeys={['Recommendation']}\n          >\n            <Menu.Item icon={<LikeOutlined />} key=\"Recommendation\">\n              Recommended for you!\n            </Menu.Item>\n            <SubMenu\n              icon={<FireOutlined />}\n              key=\"Popular Games\"\n              title=\"Popular Games\"\n              className=\"site-top-game-list\"\n            >\n              {topGames.map((game) => {\n                return (\n                  <Menu.Item key={game.id} style={{ height: '50px' }}>\n                    <img\n                      alt=\"Placeholder\"\n                      src={game.box_art_url\n                        .replace('{height}', '40')\n                        .replace('{width}', '40')}\n                      style={{ borderRadius: '50%', marginRight: '20px' }}\n                    />\n                    <span>{game.name}</span>\n                  </Menu.Item>\n                );\n              })}\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              height: 1000,\n              overflow: 'auto',\n            }}\n          >\n            <Home\n              resources={resources}\n              loggedIn={loggedIn}\n              favoriteItems={favoriteItems}\n              favoriteOnChange={favoriteOnChange}\n            />\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}